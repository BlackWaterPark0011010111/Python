
"""при передаче любого объекта в систему регистрации,
Python  автоматически вызывает метод __str__(), 
чтобы преобразовать объект в строку. Это стандартное
поведение при попытке передать объект, который не является 
строкой. Если же объект не имеет явного __str__() метода, будет
вызван метод __repr__(), который должен предоставить строковое
представление объекта. Поэтому, даже если вы передаете, например, 
числовой объект или кастомный класс, Python все равно преобразует 
его в строку для логирования или других операций."""
import logging


##############################################################################################################

"""В этом случае, класс CustommMessage не имеет конструктора, но имеет метод __str__(), который также возвращает строковое представление.
Когда вы передаете такие объекты в logging.info(), 
они автоматически преобразуются в строку с использованием метода __str__(). 
Логгер будет работать с этим строковым представлением.
Создаем свой класс с методом __str__()"""


class CustommMessage:
    def __str__(self):
        return "Это произвольное сообщение, переданное как объект."

# Настройки
logging.basicConfig(level=logging.DEBUG)

# Создаем объект сообщения
message = CustommMessage()

logging.info(message)
##############################################################################################################
